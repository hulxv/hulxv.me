---
import { getCollection } from "astro:content";
import { statSync } from "fs";
import { join } from "path";
import BaseLayout from "@/layouts/BaseLayout.astro";
import type { CollectionEntry } from "astro:content";

export async function getStaticPaths() {
	const posts = await getCollection("blog");
	return posts.map((post) => ({
		params: { path: post.slug },
		props: { post },
	}));
}

type Props = {
	post: CollectionEntry<"blog">;
};

const { post } = Astro.props;
const { title, description, image, date, tags } = post.data;

// Get file modification time
const filePath = join(process.cwd(), "src", "content", "blog", `${post.slug}.mdx`);
let modifiedDate: string | undefined;

try {
	const stats = statSync(filePath);
	modifiedDate = stats.mtime.toISOString();
} catch (error) {
	console.warn(`Could not get modification time for ${filePath}:`, error);
}

const { Content, remarkPluginFrontmatter } = await post.render();
---

<BaseLayout
	title={title}
	description={description}
	image={image}
	pageType='article'
	publishDate={typeof date === "string" ? new Date(date).toString() : date}
	modifiedDate={modifiedDate}
	tags={tags}
>
	<article class='prose mx-auto max-w-3xl'>
		<header class='mb-8'>
			<h1 class='mb-4 text-4xl font-bold'>{title}</h1>
			{description && <p class='mb-4 text-lg text-gray-600'>{description}</p>}
			<div class='mb-4 flex w-full justify-between'>
				<time class='text-sm text-gray-500' datetime={date}>{date}</time>
				<div class='flex gap-2 text-sm text-gray-500'>
					<i class='i-ri-time-line'></i>
					<span>{remarkPluginFrontmatter.minutesRead}</span>
				</div>
			</div>
		</header>

		{
			image && (
				<div class='mb-8'>
					<img
						width='1200'
						height='630'
						src={image.src}
						alt={image.alt || title}
						class='h-auto w-full rounded-lg shadow-lg'
					/>
				</div>
			)
		}

		<div class='prose lg:prose-xl'>
			<Content />
		</div>

		<footer class='mt-12 border-t pt-8'>
			<div class='mb-8'>
				<h3 class='mb-4 text-base font-semibold'>Share this article</h3>
				<div class='flex gap-3 text-sm'>
					<a
						href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(title)}&url=${encodeURIComponent(Astro.url.toString())}`}
						target='_blank'
						rel='noopener noreferrer'
						class='flex items-center gap-2 rounded bg-black-500 px-4 py-2 text-white transition-colors hover:bg-black-600'
						aria-label='Share on Twitter'
					>
						<i class='i-ri-twitter-x-line'></i>
						<span>Twitter</span>
					</a>
					<a
						href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(Astro.url.toString())}`}
						target='_blank'
						rel='noopener noreferrer'
						class='flex items-center gap-2 rounded bg-blue-700 px-4 py-2 text-white transition-colors hover:bg-blue-800'
						aria-label='Share on LinkedIn'
					>
						<i class='i-ri-linkedin-line'></i>
						<span>LinkedIn</span>
					</a>
					<a
						href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(Astro.url.toString())}`}
						target='_blank'
						rel='noopener noreferrer'
						class='flex items-center gap-2 rounded bg-blue-600 px-4 py-2 text-white transition-colors hover:bg-blue-700'
						aria-label='Share on Facebook'
					>
						<i class='i-ri-facebook-line'></i>
						<span>Facebook</span>
					</a>
					<button
						onclick={`navigator.clipboard.writeText('${Astro.url.toString()}'); this.textContent = 'Copied!'; setTimeout(() => this.textContent = 'Copy Link', 2000)`}
						class='flex items-center gap-2 rounded bg-gray-600 px-4 py-2 text-white transition-colors hover:bg-gray-700'
						aria-label='Copy link'
					>
						<i class='i-ri-link'></i>
						<span>Copy Link</span>
					</button>
				</div>
			</div>
		</footer>
	</article>
</BaseLayout>
